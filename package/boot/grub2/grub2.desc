[COPY] --- T2-COPYRIGHT-BEGIN ---
[COPY] t2/package/*/grub2/grub2.desc
[COPY] Copyright (C) 2004 - 2025 The T2 SDE Project
[COPY] Copyright (C) 1998 - 2003 ROCK Linux Project
[COPY] SPDX-License-Identifier: GPL-2.0
[COPY] --- T2-COPYRIGHT-END ---

[I] The GRand Unified Bootloader version 2

[T] GNU GRUB 2 is a very powerful boot loader, which can load a wide variety
[T] of free operating systems, as well as proprietary operating systems with
[T] chain-loading. GRUB is designed to address the complexity of booting a
[T] personal computer; both the program and this manual are tightly bound
[T] to that computer platform, although porting to other platforms may be
[T] addressed in the future.
[T]
[T] One of the important features in GRUB is flexibility; GRUB understands
[T] filesystems and kernel executable formats, so you can load an arbitrary
[T] operating system the way you like, without recording the physical position
[T] of your kernel on the disk.
[T]
[T] GRUB 2 is a long lasting effort to completely rewrite GRUB "from scratch".

[U] https://www.gnu.org/software/grub/

[A] Erich Stefan Boleyn <erich@uruk.org> {original design}
[A] OKUJI Yoshinori <okuji@kuicr.kyoto-u.ac.jp> {Maintainer}
[M] Rene Rebe <rene@t2-project.org>

[C] base/boot
[F] CROSS DIETLIBC NO-SSP NO-LTO NO-PIE
[R] + ia64 arm arm64 powerpc powerpc64 sparc64 mips mips64 riscv riscv64 x86 x86-64

[E] opt lvm2
[E] opt fuse
[E] opt fuse2

[L] GPL
[S] Beta
[V] 2.12
[P] X ?----5---9

[D] b5cbd96a243e0bfb63a91e347a1aa25803b7fbb7f5912650e3122c12 grub-2.12.tar.xz https://ftp.gnu.org/gnu/grub/
[D] 2d14f9e62ff97cef56fb6ef4b2f04ba91187b037616b12f6e028689c unifont-13.0.06.ttf http://unifoundry.com/pub/unifont/unifont-13.0.06/font-builds/

autogen=1 # for apple efi magic, ieee1275_fb, luks2-argon2, riscv64

# *** No rule to make target '../grub-core/extra_deps.lst', needed by 'syminfo.lst'.
hook_add premake 5 "touch grub-core/extra_deps.lst"

grub_postmake() {
	mkdir -p $root/boot/grub
	cp docs/grub.cfg $root/boot/grub/grub.cfg.example
}
hook_add postmake 5 "grub_postmake"

atstage toolchain && var_remove_regex confopt " " "--target=.*"
hook_add preconf 7 "cp -vf `match_source_file -p unifont` unifont.ttf"

var_append confopt ' ' --enable-device-mapper
var_append confopt ' ' --disable-libzfs

var_remove GCC_WRAPPER_APPEND ' ' -c?:-s
var_append GCC_WRAPPER_REMOVE ' ' "-Werror" # for clang

case $arch in
	arm)	var_append confopt ' ' '--with-platform=efi' ;;
	sparc*)	export ac_cv_prog_TARGET_OBJCOPY=$OBJCOPY ;;
	powerpc*) var_append GCC_WRAPPER_APPEND ' ' "-mno-altivec" ;;
	x86*)	# 386-pc 1st: Decompressor is too big, keep in sync below!
		[ "$SDECFG_DEFAULT_CC" = gcc ] &&
			var_append GCC_WRAPPER_INSERT ' ' "-Wa,-mx86-used-note=no"
		var_append GCC_WRAPPER_INSERT ' ' -Os
		var_append GCC_WRAPPER_APPEND ' ' "-mno-avx -mno-avx2"
		# TODO: fix grub's Makefile to always add -m32?
		[ "$SDECFG_X8664_X32" = 1 ] && var_append GCC_WRAPPER_INSERT ' ' -m32
		;;
esac

unset CPP
var_remove_regex makeopt ' ' 'CPP=.*'

pkg_grub_rebuild() {
	var_append confopt ' ' --with-platform=efi

	var_remove GCC_WRAPPER_INSERT ' ' "-Os -Wa,-mx86-used-note=no"
	# looks like SSE, 2, 3 usually works within EFI?
	var_append GCC_WRAPPER_REMOVE ' ' "-mno-sse -mno-sse2 -mno-sse3"
	var_remove GCC_WRAPPER_INSERT ' ' -m32

	eval $MAKE distclean
	eval_config_command $confopt $confopt

	# TODO: build x32 utils
	[ "$SDECFG_X8664_X32" = 1 ] &&
		var_append makeopt ' ' 'bin_PROGRAMS= sbin_PROGRAMS=' &&
		var_append makeinstopt ' ' 'bin_PROGRAMS= sbin_PROGRAMS='

	eval $MAKE $makeopt
	eval $MAKE $makeinstopt
}
[[ "$arch" = x86* ]] && ! atstage toolchain && hook_add postmake 7 pkg_grub_rebuild

var_append INSTALL_WRAPPER_FILTER '|' 'sed -e s,info/grub.info,info/grub2.info, \
  -e s,man8/grub-install.8,man8/grub2-install.8, \
  -e s,bin/grub-install,bin/grub2-install, -e s,bin/grub-set-default,bin/grub2-set-default,'
